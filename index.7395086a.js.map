{"mappings":"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","sources":["deps/foldcode.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function doFold(cm, pos, options, force) {\n    if (options && options.call) {\n      var finder = options;\n      options = null;\n    } else {\n      var finder = getOption(cm, options, \"rangeFinder\");\n    }\n    if (typeof pos == \"number\") pos = CodeMirror.Pos(pos, 0);\n    var minSize = getOption(cm, options, \"minFoldSize\");\n\n    function getRange(allowFolded) {\n      var range = finder(cm, pos);\n      if (!range || range.to.line - range.from.line < minSize) return null;\n      if (force === \"fold\") return range;\n\n      var marks = cm.findMarksAt(range.from);\n      for (var i = 0; i < marks.length; ++i) {\n        if (marks[i].__isFold) {\n          if (!allowFolded) return null;\n          range.cleared = true;\n          marks[i].clear();\n        }\n      }\n      return range;\n    }\n\n    var range = getRange(true);\n    if (getOption(cm, options, \"scanUp\")) while (!range && pos.line > cm.firstLine()) {\n      pos = CodeMirror.Pos(pos.line - 1, 0);\n      range = getRange(false);\n    }\n    if (!range || range.cleared || force === \"unfold\") return;\n\n    var myWidget = makeWidget(cm, options, range);\n    CodeMirror.on(myWidget, \"mousedown\", function(e) {\n      myRange.clear();\n      CodeMirror.e_preventDefault(e);\n    });\n    var myRange = cm.markText(range.from, range.to, {\n      replacedWith: myWidget,\n      clearOnEnter: getOption(cm, options, \"clearOnEnter\"),\n      __isFold: true\n    });\n    myRange.on(\"clear\", function(from, to) {\n      CodeMirror.signal(cm, \"unfold\", cm, from, to);\n    });\n    CodeMirror.signal(cm, \"fold\", cm, range.from, range.to);\n  }\n\n  function makeWidget(cm, options, range) {\n    var widget = getOption(cm, options, \"widget\");\n\n    if (typeof widget == \"function\") {\n      widget = widget(range.from, range.to);\n    }\n\n    if (typeof widget == \"string\") {\n      var text = document.createTextNode(widget);\n      widget = document.createElement(\"span\");\n      widget.appendChild(text);\n      widget.className = \"CodeMirror-foldmarker\";\n    } else if (widget) {\n      widget = widget.cloneNode(true)\n    }\n    return widget;\n  }\n\n  // Clumsy backwards-compatible interface\n  CodeMirror.newFoldFunction = function(rangeFinder, widget) {\n    return function(cm, pos) { doFold(cm, pos, {rangeFinder: rangeFinder, widget: widget}); };\n  };\n\n  // New-style interface\n  CodeMirror.defineExtension(\"foldCode\", function(pos, options, force) {\n    doFold(this, pos, options, force);\n  });\n\n  CodeMirror.defineExtension(\"isFolded\", function(pos) {\n    var marks = this.findMarksAt(pos);\n    for (var i = 0; i < marks.length; ++i)\n      if (marks[i].__isFold) return true;\n  });\n\n  CodeMirror.commands.toggleFold = function(cm) {\n    cm.foldCode(cm.getCursor());\n  };\n  CodeMirror.commands.fold = function(cm) {\n    cm.foldCode(cm.getCursor(), null, \"fold\");\n  };\n  CodeMirror.commands.unfold = function(cm) {\n    cm.foldCode(cm.getCursor(), { scanUp: false }, \"unfold\");\n  };\n  CodeMirror.commands.foldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"fold\");\n    });\n  };\n  CodeMirror.commands.unfoldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"unfold\");\n    });\n  };\n\n  CodeMirror.registerHelper(\"fold\", \"combine\", function() {\n    var funcs = Array.prototype.slice.call(arguments, 0);\n    return function(cm, start) {\n      for (var i = 0; i < funcs.length; ++i) {\n        var found = funcs[i](cm, start);\n        if (found) return found;\n      }\n    };\n  });\n\n  CodeMirror.registerHelper(\"fold\", \"auto\", function(cm, start) {\n    var helpers = cm.getHelpers(start, \"fold\");\n    for (var i = 0; i < helpers.length; i++) {\n      var cur = helpers[i](cm, start);\n      if (cur) return cur;\n    }\n  });\n\n  var defaultOptions = {\n    rangeFinder: CodeMirror.fold.auto,\n    widget: \"\\u2194\",\n    minFoldSize: 0,\n    scanUp: false,\n    clearOnEnter: true\n  };\n\n  CodeMirror.defineOption(\"foldOptions\", null);\n\n  function getOption(cm, options, name) {\n    if (options && options[name] !== undefined)\n      return options[name];\n    var editorOptions = cm.options.foldOptions;\n    if (editorOptions && editorOptions[name] !== undefined)\n      return editorOptions[name];\n    return defaultOptions[name];\n  }\n\n  CodeMirror.defineExtension(\"foldOption\", function(options, name) {\n    return getOption(this, options, name);\n  });\n});\n"],"names":["CodeMirror1","doFold","cm","pos","options","force","call","finder","getOption","Pos","minSize","getRange","allowFolded","range","to","line","from","marks","findMarksAt","i","length","__isFold","cleared","clear","firstLine","myWidget","makeWidget","on","e","myRange","e_preventDefault","markText","replacedWith","clearOnEnter","signal","widget","text","document","createTextNode","createElement","appendChild","className","cloneNode","newFoldFunction","rangeFinder","defineExtension","this","commands","toggleFold","foldCode","getCursor","fold","unfold","scanUp","foldAll","operation","lastLine","unfoldAll","registerHelper","funcs","Array","prototype","slice","arguments","start","found","helpers","getHelpers","cur","defaultOptions","auto","minFoldSize","name","undefined","editorOptions","foldOptions","defineOption","mod","CodeMirror"],"version":3,"file":"index.7395086a.js.map"}