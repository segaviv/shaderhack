{"mappings":"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","sources":["deps/foldgutter.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n      cm.off(\"optionChange\", optionChange);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n      cm.on(\"optionChange\", optionChange);\n    }\n  });\n\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line)\n          return marks[i];\n      }\n    }\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options, cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    // we can reuse the built-in indicator element if its className matches the new state\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function(line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  }\n\n  // copied from CodeMirror/src/util/dom.js\n  function classTest(cls) { return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\") }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(), state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function() {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from; state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();\n    else cm.foldCode(Pos(line, 0), opts);\n  }\n\n  function optionChange(cm, option) {\n    if (option == \"mode\") onChange(cm)\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() { updateInViewport(cm); }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function() {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to)\n      updateFoldInfo(cm, line, line + 1);\n  }\n});\n"],"names":["CodeMirror1","defineOption","cm","val","old","Init","clearGutter","state","foldGutter","options","gutter","off","onGutterClick","onChange","onViewportChange","onFold","optionChange","State","parseOptions","updateInViewport","on","Pos","this","from","to","opts","indicatorOpen","indicatorFolded","isFolded","line","marks","findMarks","i","length","__isFold","fromPos","find","marker","spec","elt","document","createElement","className","cloneNode","updateFoldInfo","cur","minSize","foldOption","func","clsFolded","classTest","clsOpen","eachLine","mark","gutterMarkers","test","pos","range","setGutterMarker","cls","RegExp","vp","getViewport","operation","folded","clear","foldCode","option","clearTimeout","changeUpdate","setTimeout","foldOnChangeTimeSpan","updateViewportTimeSpan","mod","CodeMirror"],"version":3,"file":"index.68f774fd.js.map"}